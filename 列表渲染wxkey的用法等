JS：
tap:function(event){
    var actors = this.data.actors;
    actors.splice(0,0,{
      name: "成龙",
      hobby: "打醉拳懂我意思吧"
    });
    this.setData({
      actors:actors
    })
  }
  -----------------------------------------------------------------
 WXML：
<view wx:for="{{actors}}" wx:for-item="person" wx:key="name">
<switch>{{person.name}}:{{person.hobby}}</switch>
</view>
<button bindtap='tap'>更新</button>
-------------------------------------------------------------------
key值必须为数据中的唯一属性名，若数据只有值，则用*this页面即可保留之前状态
.splice(A，B，数据)方法：A---起始位置，B---是否删除当前位置数据（0/1）
可参考：
 https://www.cnblogs.com/JdsyJ/p/8603891.html
 
 
wx:key 的值以两种形式提供：
1. 字符串或者数字，代表在 for 循环的 array 中 item 的某个 property，该 property 的值需要是列表中唯一的字符
串或数字，且不能动态改变。在写的时候，直接写这个 property 的名字就可以了，不需要
写 item.property 的形式，并且不需要加中括号。
2. 保留关键字 this 代表在 for 循环中的 item 本身，这种表示需要 item 本身是一个唯一的字符串或者数字，如：
当数据改变触发渲染层重新渲染的时候，会校正带有 key 的组件，*框架会确保他们被重新排序，而不是重新
创建，以确保使组件保持自身的状态，并且提高列表渲染时的效率。
3. 及时列表中的组件没有发生状态改变，那么也建议使用 wx:key 。因为如果不使用，那么以后重新渲染的时
候，就会把之前组件销毁掉，然后重新创建，性能会很低。
如不提供 wx:key，会报一个 warning， 如果明确知道该列表是静态，或者不必关注其顺序，可以选择忽略。
